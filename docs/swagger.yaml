definitions:
  models.Note:
    properties:
      complete:
        type: boolean
      createdAt:
        example: "2021-05-13T05:19:18.789332489Z"
        type: string
      id:
        example: 2e36a7c2-46dc-4107-8499-49ccc85adb25
        type: string
      note:
        type: string
      public:
        type: boolean
      updatedAt:
        example: "2021-05-13T05:19:18.789332489Z"
        type: string
      userId:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        example: "2021-05-13T05:19:18.789332489Z"
        type: string
      email:
        type: string
      id:
        example: 2e36a7c2-46dc-4107-8499-49ccc85adb25
        type: string
      name:
        type: string
      password:
        type: string
      updatedAt:
        example: "2021-05-13T05:19:18.789332489Z"
        type: string
      verification:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /healthz:
    get:
      summary: Returns health of the service
  /note/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Note'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get note list
      tags:
      - Note
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Note'
      produces:
      - application/json
      responses:
        "200":
          description: successfully note created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new note
      tags:
      - Note
  /note/{id}/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: nil
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete note
      tags:
      - Note
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get note
      tags:
      - Note
    put:
      consumes:
      - application/json
      description: Update note
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update note
      tags:
      - Note
  /user/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: successfully note created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update the user
      tags:
      - User
  /user/reset/{userEmail}:
    get:
      consumes:
      - application/json
      parameters:
      - description: email
        in: path
        name: userEmail
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Re-set the user password
      tags:
      - User
  /user/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: successfully note created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Sign in user
      tags:
      - User
  /user/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: successfully note created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - User
  /user/verification/{userEmail}:
    get:
      consumes:
      - application/json
      parameters:
      - description: email
        in: path
        name: userEmail
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: verify the user email
      tags:
      - User
  /user/welcome:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Check the token
      tags:
      - User
swagger: "2.0"
